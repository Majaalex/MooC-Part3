{"version":3,"sources":["components/Person.js","components/Filter.js","components/Form.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","props","persons","map","person","key","name","number","onClick","value","id","Filter","newFilter","onChange","Form","onSubmit","addPerson","newName","handleAddNames","newNumber","handleAddNumbers","type","baseUrl","axios","get","then","response","console","log","data","newObject","post","request","delete","Notification","message","messageType","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","positiveMessage","setPositiveMessage","handleUpdatePerson","newPerson","oldPerson","filter","useService","splice","findIndex","pers","concat","setTimeout","catch","error","checkExistingPersons","nameObject","nameList","numberList","nameExists","length","numberExists","useEffect","event","target","preventDefault","Math","floor","random","prompt","window","confirm","alert","toLowerCase","includes","toDelete","String","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cb0088c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = (props) => {\r\n  \r\n    return <div>\r\n        {props.persons.map(person => <p key={person.name}>\r\n            {person.name} {person.number} <button onClick={props.onClick} value={person.id}>Delete</button>\r\n        </p>)}\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = (props) =>\r\n    <div>\r\n        Filter by name: <input value={props.newFilter} onChange={props.onChange} />\r\n    </div>\r\n\r\nexport default Filter\r\n","import React from 'react';\r\n\r\nconst Form = (props) =>\r\n  <form onSubmit={props.addPerson}>\r\n    <div>\r\n      Name: <input value={props.newName} onChange={props.handleAddNames} />\r\n      Number: <input value={props.newNumber} onChange={props.handleAddNumbers} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n\r\n\r\nexport default Form\r\n","import axios from 'axios'\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n        console.log('Getting the entries')\r\n        return response.data;\r\n    })\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => {\r\n        console.log('Created a new entry')\r\n        return response.data;\r\n    })\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    console.log('Inside update')\r\n    \r\n    const request = axios.post(`${baseUrl}/${id}`, newObject)\r\n    console.log('AFter req')\r\n    \r\n    return request.then(response => {\r\n        console.log('Updated the data')\r\n        return response.data;\r\n    })\r\n}\r\n\r\nconst remove = newObject => {\r\n    axios.delete(`${baseUrl}/${newObject.id}`)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\n\r\nconst Notification = ( {message, type} ) => {\r\n    if (message === null) return null\r\n    const messageType = (type === 'confirmation') ? 'confirmation' : 'error'\r\n    return (\r\n        <div className={messageType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport useService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [positiveMessage, setPositiveMessage] = useState(null)\n\n  const updateList = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n      id: persons.length * Math.floor(Math.random() * Math.floor(100))\n    }\n    // Update an entry on case 1, add an entry on case 0;\n    switch (checkExistingPersons(newPerson)) {\n      case 1:\n        const prompt = `${newPerson.name}  is already in the phonebook, replace the old number with the new one?`\n        if (window.confirm(prompt)) handleUpdatePerson(persons, newPerson, setPersons)\n        break\n      case 0:\n        useService.create(newPerson).then(() => {\n          setPersons(persons.concat(newPerson))\n          setPositiveMessage(`${newPerson.name} has been added.`)\n          setTimeout(() => {\n            setPositiveMessage(null)\n          }, 5000)\n        })\n          .catch(error => {\n            setErrorMessage(\n              `Could not add ${newPerson.name} to the phonebook.`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        break\n      case 9:\n        alert(`${newName} or ${newNumber} already exists in the phonebook.`)\n        break\n      default:\n        console.log(\"Incorrect parameters\")\n        break\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n  const handleUpdatePerson = (persons, newPerson, setPersons) => {\n    const oldPeople = persons.filter(person => newPerson.name === person.name);\n    const oldPerson = oldPeople[0];\n    newPerson.id = oldPerson.id;\n    console.log('trying to update')\n    \n    useService.update(newPerson.id, newPerson).then(() => {\n      console.log('Updating')\n      \n      setPersons(persons.splice(persons.findIndex(pers => pers.id === oldPerson.id), 1))\n      setPersons(persons.concat(newPerson))\n      setPositiveMessage(`${oldPerson.name}'s phonenumber has been updated.`)\n          setTimeout(() => {\n            setPositiveMessage(null)\n          }, 5000)\n    })\n      .catch(error => {\n        setErrorMessage(`Could not update ${oldPerson.name}'s phone number.`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleAddNames = (event) => setNewName(event.target.value)\n  const handleAddNumbers = (event) => setNewNumber(event.target.value)\n  const handleAddFilter = (event) => setNewFilter(event.target.value)\n\n  const handleRemovePersons = (event) => {\n    const toDelete = persons.filter(person => String(person.id) === event.target.value)\n    if (window.confirm(`Delete ${toDelete[0].name}?`)) {\n      useService.remove(toDelete[0])\n      setPersons(persons.filter(person => String(person.id) !== event.target.value))\n        setPositiveMessage(`${toDelete[0].name} has been removed.`)\n          setTimeout(() => {\n            setPositiveMessage(null)\n          }, 5000)\n    }\n  }\n\n  const checkExistingPersons = (nameObject) => {\n    const nameList = persons.filter(person => person.name === nameObject.name)\n    const numberList = persons.filter(person => person.number === nameObject.number)\n    const nameExists = (nameList.length > 0) ? true : false\n    const numberExists = (numberList.length > 0) ? true : false\n    if (nameExists && !numberExists) return 1\n    else if (!nameExists && !numberExists) return 0\n    else if (nameExists && numberExists) return 9\n    else return 9\n  }\n\n  useEffect(() => {\n    const persons = useService.getAll()\n    persons.then(response => setPersons(response))\n  }, [])\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} type='error' />\n      <Notification message={positiveMessage} type='confirmation' />\n      <Filter value={newFilter} onChange={handleAddFilter} />\n      <h2>New contact</h2>\n      <Form addPerson={updateList}\n        handleAddNames={handleAddNames}\n        handleAddNumbers={handleAddNumbers}\n        newName={newName}\n        newNumber={newNumber} />\n      <h2>Numbers</h2>\n      <Person persons={persons.filter(person => person.name.toLowerCase().includes(newFilter))} onClick={handleRemovePersons} />\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}